{-Agda
import Relation.Binary.PropositionalEquality as Eq
open Eq using (_≡_; refl; cong; sym)
open Eq.≡-Reasoning using (begin_; _≡⟨⟩_; step-≡; _∎)
open import Data.Nat using (ℕ; zero; suc; _+_; _*_; _∸_)
Agda-}

\import Paths (pmap, inv)
\import util.Paths (==<>)
\import Paths (==<, >==, qed)
\open Nat (+, *)
\import Arith.Nat (-')